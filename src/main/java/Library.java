import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Optional;
import java.util.function.Predicate;
import java.util.stream.Collectors;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Library {
    public static void main (String... args) {
        final List<String> words = Arrays.asList(
                "the",
                "fred",
                "shorter",
                "shortest",
                "longer",
                "longest"
        );

        final List<String> longWords = words
                .stream()
                .filter(Library::removeShortWords)
                .collect(Collectors.toList());

        final Predicate<String> shorterThanThree = wordsShorterThan(3);
        final Predicate<String> shorterThanSix = wordsShorterThan(6);

        final List<String> shortWords = words
                .stream()
                .filter(shorterThanThree)
                .collect(Collectors.toList());

        final List<String> shortThanSixWords = words
                .stream()
                .filter(shorterThanSix)
                .collect(Collectors.toList());

        System.out.println(longWords);
        System.out.println(shortWords);
        System.out.println(shortThanSixWords);
    }

    //Closure example
    static Predicate<String> wordsShorterThan(final int minLength) {
        return testString -> Optional
                .ofNullable(testString)
                .orElse("")
                .length() > minLength;
    }

    static boolean removeShortWords(final String testString) {
        final String testValue = Optional
                .ofNullable(testString)
                .orElse("");

        return testValue.length() > 4;

    }

}
